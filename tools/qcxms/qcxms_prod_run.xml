<tool id="qcxms_prod_run" name="QCxMS prod run" version="@TOOL_VERSION@+galaxy0" python_template_version="3.5" profile="21.05">
    <description>production runs</description>
    
    <macros>
        <import>macros.xml</import>
    </macros>

    <expand macro="creator"/>

    <edam_topics>
        <edam_topic>topic_3332</edam_topic>
    </edam_topics>
    <edam_operations>
        <edam_operation>operation_0297</edam_operation>
    </edam_operations>

    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">qcxms</requirement>
    </requirements>

    <command detect_errors="exit_code"><![CDATA[
        python3 ${create_folder} &&
        find TMPQCXMS/*/ -type d | xargs -I {} -P 4 sh -c 'cd {} && qcxms --prod >> $log' &&
        getres &&
        plotms
    ]]></command>

    <environment_variables>
        <environment_variable name="OMP_NUM_THREADS">1</environment_variable>
    </environment_variables>

    <configfiles>
        <configfile name="create_folder">
import os
import shutil

#set folder1_files = str("', '").join([str($f) for $f in $in_files])
#set folder2_files = str("', '").join([str($f) for $f in $start_files])
#set folder3_files = str("', '").join([str($f) for $f in $xyz_files])

#set names = str("', '").join([str($f.name) for $f in $xyz_files])
names = '$names'
folder_names = [x.split("_")[0] for x in names]

folder1_files = '$folder1_files'
folder2_files = '$folder2_files'
folder3_files = '$folder3_files'

# Create a new output folder to store the result
output_path = 'TMPQCXMS'
os.makedirs(output_path, exist_ok=True)

for fname, filename1, filename2, filename3 in zip(folder_names, folder1_files, folder2_files, folder3_files):
    new_folder_path = os.path.join(output_path, fname)
    os.makedirs(new_folder_path, exist_ok=True)

    shutil.copy2(os.path.join(os.path.dirname(folder1_files[0]), filename1), os.path.join(new_folder_path, 'qcxms.in'))
    shutil.copy2(os.path.join(os.path.dirname(folder2_files[0]), filename2), os.path.join(new_folder_path, 'qcxms.start'))
    shutil.copy2(os.path.join(os.path.dirname(folder3_files[0]), filename3), os.path.join(new_folder_path, 'start.xyz'))

        </configfile>
    </configfiles>

    <inputs>
        <param type="data_collection" collection_type="list" name="in_files" label="in files [.in]" format="in,txt,text"/>
        <param type="data_collection" collection_type="list" name="start_files" label="start files [.start]" format="start,txt,text"/>
        <param type="data_collection" collection_type="list" name="xyz_files" label="xyz files [.xyz]" format="xyz,txt,text"/>
    </inputs>

    <outputs>
        <data name="result" format="txt" from_work_dir="result.jdx" label="results.jdx generated by ${tool.name} on ${on_string}"/>

        <data name="log" format="txt" label="logfile of ${tool.name} on ${on_string}"/>
    </outputs>

    <tests>
        <test expect_failure="true" />
    </tests>

    <help><![CDATA[]]>
    </help>

    <citations>
        <citation type="doi">10.1002/anie.201300158</citation>
        <citation type="doi">10.1039/C4OB01668H</citation>
        <citation type="doi">10.1021/jp5096618</citation>
        <citation type="doi">10.1255/ejms.1313</citation>
        <citation type="doi">10.1021/acs.jpca.6b02907</citation>
    </citations>
</tool>